def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '341'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '3.4.1'
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion 31

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.kermany.behandam"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file(".\\KeyBehandam.jks")
            storePassword "Behandam@110"
            keyAlias "Behandam"
            keyPassword "Behandam110"
        }
    }
    lintOptions {
        disable 'InvalidPackage'
        checkReleaseBuilds false
    }
    flavorDimensions "app"
    productFlavors {
        debugApp {
            dimension "app"
            applicationIdSuffix ".debug"
        }
        developApp {
            dimension "app"
            applicationIdSuffix ".develop"
        }
        stageApp {
            dimension "app"
            applicationIdSuffix ".stage"
        }
        releaseApp {
            dimension "app"
        }
    }
    buildTypes {
        release {
            minifyEnabled false // add this
            shrinkResources false
            useProguard true
            debuggable false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'// add this
            signingConfig signingConfigs.release // this is default for release
        }

        debug {
            minifyEnabled false // a
            shrinkResources false
            debuggable true
         signingConfig signingConfigs.debug // this is default for release
        }
    /*    develop {
            minifyEnabled false // a
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' // add this
            signingConfig signingConfigs.debug // this is default for release
        }
        stage {
            minifyEnabled false // a
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro' // add this
            signingConfig signingConfigs.debug // this is default for release
        }*/
    }

}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.multidex:multidex:2.0.1'
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-analytics'

}
